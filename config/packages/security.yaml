security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            
            lazy: true
            provider: app_user_provider
            
            logout:
                path: logout
                # where to redirect after logout
                # target: app_any_route
            form_login:
                login_path: login #qd une pers va vouloir s'auth? qd il sera sur la route connex
                check_path: login # les infos sont récupérées sur la route connexion
                default_target_path: accueil_user
                
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profil, roles: ROLE_USER }
         - { path: ^/ajouter, roles: ROLE_USER }
         - { path: ^/ajout_commentaire, roles: ROLE_USER }
         - { path: ^/accueil_user, roles: ROLE_USER }
         
