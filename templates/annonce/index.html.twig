{% extends 'base.html.twig' %}

{% block title %}Tous nos produits{% endblock %}
{% block stylesheets %}


    
    </style>
{% endblock %}
{% block body %}
<style>
      .mapboxgl-ctrl-geocoder{
      min-width: 10%;
      visibility:hidden}

.filtre_navbar2{
        
        
        display: flex;
        margin: 0 0;
        
}
#filters p{
    
    margin: 1em 1em
}
.min_max{
    
    
    width: 100px;
    margin: 0.8em 0.9em
}

</style>

    <div class="container-fluid navbartwo" style="position: fixed;background-color: beige;z-index: 10;height: 60px">
        <div class="span6 offset3 navbar" style="padding-top:0">
            <div class="navbar-inner"  style="margin:0 auto">
                    
                <form id="filters" class="filtre_navbar2" >
                     {% for categorie in categories %}
                    {# On vérifie si la catégorie est dans les paramètres #}
                    
                    <p>
                        <input type="checkbox"
                            name="categorie[]" 
                            id="cat{{categorie.id}}" 
                            value="{{categorie.id}}"
                            {# requetes.categorie renvoie 22  #}
                            
                            {% if requetes.categorie is defined %}
                            
                                {% if categorie.id in requetes.categorie  %} checked {% endif %} 

                            {% endif %}>
                            
                                
                            
                            <label for="cat{{categorie.id}}">{{categorie.type}}</label>

                    </p>
                {% endfor %}

                <input type="text"  class="min_max"name="min" id="min" placeholder="min">
                    
                <input type="text" class="min_max"name="max" id="max" placeholder="max">
                    
                    
                    <input type="hidden" name="page" value="{{page}}">
                </form>
                
            </div>
        </div>
    </div>
    <div class="col-md-11 mx-auto " style="margin-top:75px!important">

    <div class="container-fluid">
        <div class="row">

{# right #}
<div class="col-md-9" id="content">
	
		
			{% include "annonce/_content.html.twig" %}
			
		
	</div>
<div class="mt-4">{{ knp_pagination_render(annonces) }}</div>   



{% endblock %}


{% block javascripts %}
    <script>

    
         let elements = document.getElementsByClassName("card");
    console.log(elements);
  for (let i = 0; i < elements.length; i++) {
            let long= document.getElementsByClassName("card")[i].dataset.value;
            
            const usingSplit = Array.from(long.split(','));

    console.log(usingSplit[0]);
    console.log(usingSplit[1]);
        elements[i].addEventListener("mouseenter",function(){
            console.log('hey');
            let markerHover = new mapboxgl.Marker({
                color:"rgba(34,66,76,1)"
            })
            .setLngLat([usingSplit[0],usingSplit[1]])
            .addTo(map)
            elements[i].addEventListener("mouseleave",function(){
                markerHover.remove()
            })
        });
    }
function url() {
    location = "{{ path('index_user')}}";
}

window.onload = () => {
    const FiltersForm = document.querySelector("#filters");
    console.log(FiltersForm);

    // On boucle sur les input
    document.querySelectorAll("#filters").forEach(input => {
        input.addEventListener("change", () => {
            console.log('click');
            // Ici on intercepte les clics
            // On récupère les données du formulaire
            const Form = new FormData(FiltersForm);
            console.log(Form);
            // On fabrique la "queryString"
            const Params = new URLSearchParams();

            Form.forEach((value, key) => {
                Params.append(key, value);
                console.log(Params.toString());
            });

            // On récupère l'url active
            const Url = new URL(window.location.href);
            console.log(Params.toString());
            // On lance la requête ajax
            fetch(Url.pathname + "?" + Params.toString() + "&ajax=1", {
                headers: {
                    "X-Requested-With": "XMLHttpRequest"
                }
            }).then(response => 
                response.json()
            ).then(data => {
                // On va chercher la zone de contenu
                const content = document.querySelector("#content");

                // On remplace le contenu
                content.innerHTML = data.content;

                // On met à jour l'url
                history.pushState({}, null, Url.pathname + "?" + Params.toString());
            }).catch(e => alert(e));

        });
    });
}

</script>
{% endblock %}

